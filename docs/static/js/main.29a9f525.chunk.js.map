{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","console","log","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,KAEdO,MAAM,kEAKV,SACI,uBACIC,KAAK,OACLC,MAAQV,EACRW,SAnBQ,SAACR,GACjBF,EAAeE,EAAES,OAAOF,OACxBG,QAAQC,IAAIX,EAAES,OAAOF,a,QCRhBK,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGtC,OADAL,QAAQC,IAAK,CAACE,KAAIC,QAAOC,QAErB,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,S,wBCNLK,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdN,EADc,iDACmCO,UAAUF,GAD7C,+DAEDG,MAAOR,GAFN,cAEdS,EAFc,gBAGGA,EAAIC,OAHP,uBAGZC,EAHY,EAGZA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVtB,kBAgBbY,GAhBa,4CAAH,sDCMRK,G,KAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAStB,ECdwB,SAAEA,GAC1B,MAA4BxB,mBAAS,CACjCkC,OAAQ,GACRG,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAoBA,OAdAC,qBAAU,WACNjB,EAAUC,GACNiB,MAAM,SAAAC,GACFC,YAAY,WACR7B,QAAQC,IAAI2B,GACZH,EAAS,CACLL,OAAQQ,EACRL,SAAS,MAEd,UAEZ,CAAEb,IAGEc,EDPqBM,CAAcpB,GAAlCU,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,QAGhB,OACI,qCACI,mCAAOb,EAAP,OAEEa,EAAU,mBAAGjB,UAAU,qDAAb,wBAAmF,KAE/F,qBAAKA,UAAU,oDAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIhB,cExB1B4B,EAAgB,WAGzB,MAAoC7C,mBAAS,CAAC,gBAAiB,cAAe,QAA9E,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnBlCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.29a9f525.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useState } from 'react/cjs/react.development'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState()\n\n    const handleInput = (e) => {\n        setInputValue( e.target.value );\n        console.log(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length > 2){\n            setCategories(cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }else{\n            alert('El nombre de la categoria tiene que tener mas de 2 caracteres')\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInput }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url }) => {\n\n    console.log( {id, title, url})\n    return (\n        <div className='card animate__animated animate__bounceInDown'>\n            <img src={ url } alt={ title }/>\n            <p> { title }</p>\n        </div>\n    )\n    \n}\n","\n\nexport const getGifts = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=15&api_key=Tnzff9uF2ewPuThQ92fEMTD0ibu5FRKU`\n    const res =  await fetch( url );\n    const { data } = await res.json();\n    //console.log( data );\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    //console.log(gifs);\n    //console.log(encodeURI(category))\n    return gifs;\n}","import React  from 'react'\n\nimport { GifGridItem } from './GifGridItem';\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\n\nimport 'animate.css';\n\nexport const GifGrid = ({ category }) => {\n\n    /* const [ images, setImages ] = useState([]);\n\n    useEffect(() => {\n        getGifts( category ).\n            then( setImages )\n    }, [ category ]) */\n\n    const { images, loading } = useFetchGifs( category );\n    //console.log(loading);       \n    \n    return (\n        <>\n            <h3> { category } </h3>\n\n            { loading ? <p className=\"animate_animated animate__bounce animate__delay-5s\">Cargando..</p> : null}\n            \n            <div className='card-grid animate__animated animate__bounceInDown'>\n                { \n                    images.map( img => \n                        <GifGridItem \n                            key= { img.id }\n                            { ...img }\n                        />    \n                    ) \n                }\n            </div> \n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifts } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n    const [ state, setState ] = useState({\n        images: [],\n        loading: true,\n    })\n    \n    \n    useEffect(() => {\n        getGifts( category ).\n            then( imgs => {\n                setTimeout( () => {\n                    console.log(imgs);\n                    setState({\n                        images: imgs,\n                        loading: false,\n                    }) \n                }, 7000)\n            })\n    }, [ category ])\n    \n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nexport const GifExpertApp =  () => {\n    \n    //const categories = ['One punch', 'Dragon Ball', 'Samurai X']\n    const [categories, setCategories] = useState(['One punch man', 'Dragon Ball', 'Sam']);\n\n    /*  const handleAdd = () => {\n        const textoAgregar = document.querySelector('input').value\n        setCategories([...categories, textoAgregar])\n        document.querySelector('input').value = '';\n    } */\n\n    return( \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            \n            <ol>\n                { \n                    categories.map( category => \n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                )}\n            </ol>\n        </>    \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp'\n\nimport 'animate.css'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}